print(Uyghur)
print(Finnish)
# method using regex
get_cooccurrence_tokens2 <- function(corpus, set1, set2) {
data = read_csv(corpus, col_names = FALSE)
set_1 <- paste(set1, collapse = '')
set_2 <- paste(set2, collapse = '')
regex1 <- str_glue('.*[{set_1}].*[{set_2}].*')
regex2 <- str_glue('.*[{set_2}].*[{set_1}].*')
roots <- unique(c(str_subset(data$X1, regex1), str_subset(data$X1, regex2)))
return(roots)
}
# 2)
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens2(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
# 3)
Finnish = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
Uyghur = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/uyghur.txt",
c("ü", "ö", "e"),
c("u", "o", "a"))
library(tidyverse)
# 3)
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
Uyghur_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/uyghur.txt",
c("ü", "ö", "e"),
c("u", "o", "a"))
print(Finnish_prop)
print(Uyghur_prop)
#4.
#1) old method without using regex
get_cooccurrence_tokens <- function(corpus, set1, set2) {
root_list <- c()
data = read.table(corpus, header = FALSE)[[1]]
for (root in data) {
for (element in set1) {
if(isTRUE(str_detect(root, element))) {
for (element in set2) {
if (isTRUE(str_detect(root, element))) {
if (isFALSE(root %in% root_list)) {
root_list <- append(root_list, root)
}
}
}
}
}
}
return(root_list)
}
# 2)
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
# 3)
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
Uyghur_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/uyghur.txt",
c("ü", "ö", "e"),
c("u", "o", "a"))
print(Finnish_prop)
print(Uyghur_prop)
Uyghur_token = get_cooccurrence_tokens2("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/uyghur.txt",
c("ü", "ö", "e"),
c("u", "o", "a"))
print(length(Uyghur_token))
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
bodymass = read.csv("./bodymass.csv",header=TRUE)
head(bodymass)
head(bodymass)
plot(body$height, body$bodymass, xlab="Height", ylab="Bodymass", main="Scatterplot")
body = read.csv("./bodymass.csv",header=TRUE)
head(body)
plot(body$height, body$bodymass, xlab="Height", ylab="Bodymass", main="Scatterplot")
abline(lm(bodymass~height, data=body))
plot(body$height, body$bodymass, xlab="Height", ylab="Bodymass", main="Scatterplot")
abline(lm(bodymass~height, data=body))
abline(lm(bodymass~height, data = body))
plot(abline(lm(bodymass~height, data = body)))
####################################
# Import alcoholarm dataset
treadwear = read.table("./treadwear.txt" , header=TRUE)
plot(body$height, body$bodymass, xlab = "Height", ylab = "Bodymass", main = "Scatterplot")
abline(lm(bodymass~height, data = body))
model <- lm(bodymass~height, data = body)
summary(model)
plot(model)
qqnorm(rstandard(model))
plot(model)
model2 <- lm(bodymass~height + I(height^2), data = body)
summary(model2)
anova(model, model2)
plot(model2)
reduced_model <- lm(bodymass ~ 1, data = body)
anova(reduced_model, model2)
bodymass = 160.727653 - 2.075533 * 170 + 0.009104 * 170^2
bodymass
bodymass1
bodymass1 = 160.727653 - 2.075533 * 170 + 0.009104 * 170^2
bodymass2 = 160.727653 - 2.075533 * 171 + 0.009104 * 171^2
bodymass2
difference <- bodymass2 - bodymass1
difference
bodymass3 = 160.727653 - 2.075533 * 175 + 0.009104 * 175^2
bodymass3
difference2 <- bodymass3 - bodymass1
difference2
physical = read.txt("./PhysicalData.txt",header=TRUE)
physical = read.table("./PhysicalData.txt",header=TRUE)
head(physical)
ale~Female, data = physical)
model1 <- lm(Male~Female, data = physical)
summary(model1)
cor(physical$Male, physical$Female)
cor(physical$RtFoot, physical$LeftFoot)
cor(physical$HeadCirc, physical$RtFoot)
cor(physical$HeadCirc, physical$LeftFoot)
cor(physical$HeadCirc, physical$Male)
model <- lm(HeadCirc ~ Male + Female, data = physical)
summary(model)
model2 <- lm(HeadCirc ~ RtFoot + Male, data = physical)
summary(model2)
model3 <- lm(HeadCirc ~ LeftFoot + RtFoot + Male, data = physical)
summary(model3)
anova(model3)
sqrt(198.472/50)
reduced_model <- lm(formula = HeadCirc ~ Male, data = physical)
anova(reduced_model, model3)
model4 <- lm(formula = HeadCirc ~ LeftFoot + RtFoot, data = physical)
summary(model4)
model5 <- lm(formula = HeadCirc ~ LeftFoot, data = physical)
summary(model5)
VIF(model4)
vif(model4)
library(car)
vif(model4)
vif(model3)
```{r}
model2 <- lm(bodymass~height + I(height^2), data = body)
summary(model2)
vif(model2)
MASS
library(MASS)
knitr::opts_chunk$set(echo = TRUE)
full = lm(Height ⇠ LeftArm + RtArm + LeftFoot + RtFoot + LeftHand + RtHand + HeadCirc + Nose + Male ,data = physical)
full = lm(Height ~ LeftArm + RtArm + LeftFoot + RtFoot + LeftHand + RtHand + HeadCirc + Nose + Male ,data = physical)
full = lm(Height ~ LeftArm + RtArm + LeftFoot + RtFoot + LeftHand + RtHand + HeadCirc + nose + Male ,data = physical)
step(lm(Height~1,data = physical), scope=list(upper=full), direction="forward")
full = lm(HeadCirc ~ Height + LeftArm + RtArm + LeftFoot + RtFoot + LeftHand + RtHand + nose + Male ,data = physical)
step(lm(HeadCirc ~ 1,data = physical), scope=list(upper=full), direction="forward")
best_model <- lm(formula = HeadCirc ~ Male + LeftHand, data = physical)
summary(best_model)
vif(model2)
library(car)
library(MASS)
vif(model2)
summary(regsubsets(HeadCirc ~ Height + LeftArm + RtArm + LeftFoot + RtFoot + LeftHand + RtHand + nose + Male, data = physical))
install.packages("leaps")
library(leaps)
summary(regsubsets(HeadCirc ~ Height + LeftArm + RtArm + LeftFoot + RtFoot + LeftHand + RtHand + nose + Male, data = physical))
cor(physical$Male, physical$Female)
cor(physical$RtFoot, physical$LeftFoot)
cor(physical$HeadCirc, physical$RtFoot)
cor(physical$HeadCirc, physical$LeftFoot)
cor(physical$HeadCirc, physical$Male)
cor(physical)
model2 <- lm(HeadCirc ~ RtFoot + Male, data = physical)
physical$hat = hatvalues(model2)
head(physical[order(physical$hat, decreasing=TRUE),])
summary(physical[physical$Male==1,])
head(physical[order(physical$hat, decreasing=TRUE),])
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=15)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=15)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5 , pch=15)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", pch=15)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5 , pch=15)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue")
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue")
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=10)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5 , pch=15)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=21)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=19)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5 , pch=19)
physical$hat = hatvalues(model2)
head(physical[order(physical$hat, decreasing=TRUE),])
summary(physical)
head(physical[order(physical$hat, decreasing=TRUE),])
model2 <- lm(bodymass~height + I(height^2), data = body)
body$hat = hatvalues(model2)
head(body[order(body$hat, decreasing=TRUE),])
summary(body)
head(body[order(body$hat, decreasing=TRUE),])
model3 <- lm(HeadCirc ~ LeftFoot + RtFoot + Male, data = physical)
physical$hat = hatvalues(model3)
head(physical[order(physical$hat, decreasing=TRUE),])
summary(physical)
head(physical[order(physical$hat, decreasing=TRUE),])
knitr::opts_chunk$set(echo = TRUE)
cor(physical)
model4 <- lm(formula = HeadCirc ~ LeftFoot + RtFoot, data = physical)
summary(model4)
model6 <- lm(formula = HeadCirc ~ LeftFoot + hat, data = physical)
summary(model6)
VIF(model6)
vif(model6)
```{r}
library(car)
library(MASS)
library(leaps)
vif(model6)
vif(model4)
vif(model6)
model6 <- lm(formula = HeadCirc ~ LeftFoot + I(LeftFoot^2), data = physical)
summary(model6)
vif(model6)
model4 <- lm(formula = HeadCirc ~ LeftFoot + RtFoot, data = physical)
summary(model4)
model6 <- lm(formula = HeadCirc ~ 1, data = physical)
summary(model6)
anova(model6, model4)
library(tidyverse)
get_cooccurrence_tokens3 <- function(corpus, set1, set2) {
root_list <- c()
data = read.table(corpus, header = FALSE)[[1]]
for (root in data) {
for (element in set1) {
if(str_detect(root, element)) {
for (element in set2) {
if (str_detect(root, element)) {
if (!(root %in% root_list)) {
root_list <- append(root_list, root)
}
}
}
}
}
}
return(root_list)
}
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens2(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens3(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
Uyghur_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/uyghur.txt",
c("ü", "ö", "e"),
c("u", "o", "a"))
print(Finnish_prop)
print(Uyghur_prop)
read_csv("abbr_freq.csv", locale=locale(encoding="UTF-8"))
library(tidyverse)
read_csv("abbr_freq.csv", locale=locale(encoding="UTF-8"))
setwd("~/Desktop/chinese_short_long_word_use/scripts_and_texts")
read_csv("abbr_freq.csv", locale=locale(encoding="UTF-8"))
# We can use the "skip" argument to omit initial rows
read_csv("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/vowdata.dat", skip=29)
read_csv("abbr_freq.csv", locale=locale(encoding="UTF-8"), skip=29)
read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"), delim="/t")
read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"), col_names = FALSE)
"Short_long_raio")
read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("Short_form",
"Short_count",
"Long_form",
"Long_count",
"Short_long_raio"))
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("Short_form",
"Short_count",
"Long_form",
"Long_count",
"Short_long_raio"))
sort(abbr_freq, Short_count)
head(abbr_freq)
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_raio"))
head(abbr_freq)
sort(abbr_freq, short_count)
header(abbr_freq)
colnames(abbr_freq)
sort(abbr_freq, short_count)
arrange(abbr_freq, short_count)
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_ratio"))
arrange(abbr_freq, short_long_ratio)
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_ratio"))
arrange(abbr_freq, short_long_ratio)
print(n=100)
arrange(abbr_freq, short_long_ratio, n=100)
abbr_freq
print(abbr_freq, n=100)
print(abbr_freq, n=120)
arrange(abbr_freq, short_long_ratio, n=120)
print(arrange(abbr_freq, short_long_ratio, n=120))
arrange(abbr_freq, short_long_ratio, n=120) %>%
print(n=100)
arrange(abbr_freq, short_long_ratio, n=120) %>%
print(n=150)
arrange(abbr_freq, short_long_ratio, n=120) %>%
print(n=200)
arrange(abbr_freq, short_long_ratio, n=120) %>%
print(n=300)
arrange(abbr_freq, short_long_ratio, n=120) %>%
print(n=500)
arrange(abbr_freq, short_long_ratio, n=120) %>%
print(n=400)
arrange(abbr_freq, desc(short_long_ratio)) %>%
print(n=400)
arrange(abbr_freq, long_count) %>%
print(n=200)
arrange(abbr_freq, long_count) %>%
print(n=400)
arrange(abbr_freq, long_count) %>%
print(n=500)
arrange(abbr_freq, long_count) %>%
print(n=700)
arrange(abbr_freq, long_count) %>%
print(n=1000)
arrange(abbr_freq, long_count) %>%
print(n=1200)
arrange(abbr_freq, short_count) %>%
print(n=300)
arrange(abbr_freq, short_count) %>%
print(n=900)
ratio1 <- filter(abbr_freq, short_long_ratio = 1)
ratio1 <- filter(abbr_freq, short_long_ratio == 1)
ratio
ratio1
ratio1 <- filter(abbr_freq, short_long_ratio == 1, short_count == 1)
ratio1
ratio1 <- filter(abbr_freq, short_count < 5, long_count < 5)
ratio1
ratio1 <- filter(abbr_freq, short_count < 10, long_count < 10)
ratio1
arrange(abbr_freq, short_long_ratio) %>%
print(n=400)
arrange(abbr_freq, short_long_ratio) %>%
print(n=400)
ratio1 <- filter(abbr_freq, short_count < 10, short_long_ratio < 0.10)
ratio1
ratio1 <- filter(abbr_freq, short_count < 10, short_long_ratio < 0.10, long_count < 10)
ratio1
ratio1 <- filter(abbr_freq, long_count < 10, short_long_ratio > 1000)
ratio1
ratio1 <- filter(abbr_freq, long_count < 10, short_count < 10)
ratio1
ratio1 <- filter(abbr_freq, long_count < 5, short_count < 5)
ratio1
summary(abbr_freq)
4771 - 191 - 147 -120
arrange(abbr_freq, desc(short_long_ratio)) %>%
print(n=400)
arrange(abbr_freq, desc(short_long_ratio)) %>%
print(n=400)
68+72+51+61+36
242
242+171+136+104+112
765/4771
library(tidyverse)
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_ratio"))
setwd("~/Desktop/chinese_short_long_word_use/scripts_and_texts")
library(tidyverse)
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_ratio"))
ratio1 <- filter(abbr_freq, long_count < 10)
ratio1
library(tidyverse)
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_ratio"))
data_to_keep <- abbr_freq %>%
filter(short_count > 10) %>%
filter(long_count > 10) %>%
filter(0.1 < short_long_ratio < 10)
data_to_keep <- abbr_freq %>%
filter(short_count > 10)
data_to_keep <- abbr_freq %>%
filter(short_count > 10) %>%
filter(long_count > 10) %>%
filter(short_long_ratio > 0.1) %>%
filter(short_long_ratio < 10)
data_to_keep
pair_to_keep <- abbr_freq %>%
filter(short_count > 10) %>%
filter(long_count > 10) %>%
filter(short_long_ratio > 0.1) %>%
filter(short_long_ratio < 10)
write_csv(pair_to_keep, "abbr_pair_w_ratio.csv")
unbalanced <- abbr_freq %>%
filter(short_count <= 10) %>%
filter(long_count <= 10) %>%
filter(short_long_ratio < 0.1) %>%
filter(short_long_ratio > 10)
write_csv(unbalanced, "abbr_unbalanced.csv")
unbalanced <- abbr_freq %>%
filter(short_count <= 10) %>%
filter(long_count <= 10) %>%
filter(short_long_ratio > 0.1) %>%
filter(short_long_ratio < 10)
balanced <- abbr_freq %>%
filter(short_count > 10) %>%
filter(long_count > 10) %>%
filter(short_long_ratio > 0.1) %>%
filter(short_long_ratio < 10)
balanced
library(dplyr)
unbalanced <- anti_join(abbr_freq, balanced, by='short_form')
unbalanced
balanced
2576+1991
write_csv(unbalanced, "abbr_unbalanced.csv")
balanced_ratio10 <- abbr_freq %>%
filter(short_count > 10) %>%
filter(long_count > 10) %>%
filter(short_long_ratio > 0.1) %>%
filter(short_long_ratio < 10)
unbalanced_ratio10 <- anti_join(abbr_freq, balanced, by='short_form')
balanced_ratio100 <- abbr_freq %>%
filter(short_count > 10) %>%
filter(long_count > 10) %>%
filter(short_long_ratio > 0.1) %>%
filter(short_long_ratio < 100)
unbalanced_ratio100 <- anti_join(abbr_freq, balanced, by='short_form')
balanced_ratio100
write_csv(unbalanced10, "abbr_unbalanced10.csv")
write_csv(unbalanced_ratio10, "abbr_unbalanced10.csv")
balanced_ratio10
unbalanced_ratio10
2576+1,991
2576+1991
write_csv(balanced_ratio10, "abbr_balanced10.csv")
library(tidyverse)
library(dplyr)
abbr_freq <- read_delim("abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_ratio"))
