col_names = c("target_word",
"concept",
"word_form",
"target_word_logprob",
"disj_logprob",
"line_num"))
logprob$line_num <- as.factor(logprob$line_num)
logprob$word_form <- as.factor(logprob$word_form)
return(logprob)
}
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linenewpair200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
View(data)
View(means)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineoldpair200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
View(means)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs2tok.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
t_test_data %>% mutate(above_zero = (long - short)>0) %>%
ggplot(aes(x=reorder(concept, (long - short), mean), y= long - short, label = concept, color=above_zero)) +
geom_point(size=3) + geom_text(angle = -45, hjust = 1.5, size = 3) + theme_classic() + labs(y="Difference in surprisal", x = 'Concept') +
geom_hline(yintercept = 0) + scale_x_discrete(expand = c(0.05, 0.05)) + scale_y_discrete(expand = c(0.13, 0)) +
theme(axis.ticks.x=element_blank(), axis.text.x=element_blank()) + guides(color=F) + scale_color_manual(values=c("red","blue" ))
View(means)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs20.csv")
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs200.csv")
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs200.csv")
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs2tok.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs100.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linefirstnewpairs300.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue200.csv.csv")
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue200.csv.csv")
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue200.csv.csv")
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue2tok.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_linecluefull.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
library(tidyverse)
library(dplyr)
library(showtext)
showtext_auto()
library(lme4)
library(lmerTest)
library(ggplot2)
library(poolr)
library(ggrepel)
stats <- read.csv(file = "/Users/yanting/Desktop/word_length/probs/stats.csv")
stats$stat <- as.numeric(stats$stat)
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200"), dataset %in% c("oldpair_50entry", "newpair_100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each"))
stats$stat <- as.numeric(stats$stat)
view(stats)
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each"))
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue100entry")) %>%
view()
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue_100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple", "newpair_first_mention_100entry" = "blue", "clue_100entry" = "green"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each", "Dataset A 100 first mentions each", "clue 104 entries each"))
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue_100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple", "newpair_first_mention_100entry" = "blue", "clue_100entry" = "deepskyblue1"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each", "Dataset A 100 first mentions each", "clue 104 entries each"))
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue_100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple", "newpair_first_mention_100entry" = "deeppink", "clue_100entry" = "deepskyblue1"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each", "Dataset A 100 first mentions each", "clue 104 entries each"))
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200", "300"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue_100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200", "300")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple", "newpair_first_mention_100entry" = "deeppink", "clue_100entry" = "deepskyblue1"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each", "Dataset A 100 first mentions each", "clue 104 entries each"))
stats <- read.csv(file = "/Users/yanting/Desktop/word_length/probs/stats.csv")
stats$stat <- as.numeric(stats$stat)
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200", "300"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue_100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200", "300")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple", "newpair_first_mention_100entry" = "deeppink", "clue_100entry" = "deepskyblue1"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each", "Dataset A 100 first mentions each", "clue 104 entries each"))
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue50.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("/Users/yanting/Desktop/word_length/probs/prob_lineclue10.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
stats <- read.csv(file = "/Users/yanting/Desktop/word_length/probs/stats.csv")
stats$stat <- as.numeric(stats$stat)
stats %>% filter(test == "glmer", parameter %in% c("beta", "p"), context_char %in% c("2tok", "10", "50", "100", "200", "300"), dataset %in% c("oldpair_50entry", "newpair_100entry", "newpair_first_mention_100entry", "clue_100entry")) %>%
pivot_wider(id_cols = c("test", "dataset", "context_char"), names_from = parameter, values_from = stat) %>% group_by(dataset) %>%
mutate(significance = p<0.05) %>%
ggplot(aes(x = context_char, y = beta, color = dataset, group = dataset, shape = significance)) +
geom_point(size = 4) + geom_line() +
scale_shape_manual(values = c(1, 16)) + theme_bw() +
scale_x_discrete(limits = c("2tok", "10", "50", "100", "200", "300")) +
geom_hline(yintercept = 0) + labs(x = "Context Length", y = "Effect Size") +
scale_color_manual(values = c("oldpair_50entry" = "lightsalmon", "newpair_100entry" = "purple", "newpair_first_mention_100entry" = "deeppink", "clue_100entry" = "deepskyblue1"),
name = "dataset",
labels = c("Dataset A 100 entries each", "Dataset B 50 entries each", "Dataset A 100 first mentions each", "clue 104 entries each"))
