points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue")
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=10)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5 , pch=15)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=21)
plot(physical$RtFoot, physical$HeadCirc, xlab="Right Foot size" , ylab="Head Circumference")
points(head(physical[order(physical$hat, decreasing=TRUE),])[1,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[1,"HeadCirc"], col="blue", cex=1.5 , pch=19)
points(head(physical[order(physical$hat, decreasing=TRUE),])[2,"RtFoot"], head(physical[order(physical$hat, decreasing=TRUE),])[2,"HeadCirc"], col="blue", cex=1.5 , pch=19)
physical$hat = hatvalues(model2)
head(physical[order(physical$hat, decreasing=TRUE),])
summary(physical)
head(physical[order(physical$hat, decreasing=TRUE),])
model2 <- lm(bodymass~height + I(height^2), data = body)
body$hat = hatvalues(model2)
head(body[order(body$hat, decreasing=TRUE),])
summary(body)
head(body[order(body$hat, decreasing=TRUE),])
model3 <- lm(HeadCirc ~ LeftFoot + RtFoot + Male, data = physical)
physical$hat = hatvalues(model3)
head(physical[order(physical$hat, decreasing=TRUE),])
summary(physical)
head(physical[order(physical$hat, decreasing=TRUE),])
knitr::opts_chunk$set(echo = TRUE)
cor(physical)
model4 <- lm(formula = HeadCirc ~ LeftFoot + RtFoot, data = physical)
summary(model4)
model6 <- lm(formula = HeadCirc ~ LeftFoot + hat, data = physical)
summary(model6)
VIF(model6)
vif(model6)
```{r}
library(car)
library(MASS)
library(leaps)
vif(model6)
vif(model4)
vif(model6)
model6 <- lm(formula = HeadCirc ~ LeftFoot + I(LeftFoot^2), data = physical)
summary(model6)
vif(model6)
model4 <- lm(formula = HeadCirc ~ LeftFoot + RtFoot, data = physical)
summary(model4)
model6 <- lm(formula = HeadCirc ~ 1, data = physical)
summary(model6)
anova(model6, model4)
library(tidyverse)
get_cooccurrence_tokens3 <- function(corpus, set1, set2) {
root_list <- c()
data = read.table(corpus, header = FALSE)[[1]]
for (root in data) {
for (element in set1) {
if(str_detect(root, element)) {
for (element in set2) {
if (str_detect(root, element)) {
if (!(root %in% root_list)) {
root_list <- append(root_list, root)
}
}
}
}
}
}
return(root_list)
}
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens2(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
get_cooccurrence_proportion <- function(corpus, set1, set2){
data = read_csv(corpus, col_names = FALSE)
num_of_roots = length(data$X1)
num_of_disharm_roots = length(get_cooccurrence_tokens3(corpus, set1, set2))
proportion = num_of_disharm_roots / num_of_roots
return(proportion)
}
Finnish_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/finnish.txt",
c("y", "ö", "ä"),
c("u", "o", "a"))
Uyghur_prop = get_cooccurrence_proportion("http://socsci.uci.edu/~cjmayer/teaching/LSCI_202A/uyghur.txt",
c("ü", "ö", "e"),
c("u", "o", "a"))
print(Finnish_prop)
print(Uyghur_prop)
setwd("/Users/yanting/Desktop/word_length/scripts_and_texts")
library(tidyverse)
library(dplyr)
library(showtext)
showtext_auto()
library(lme4)
library(lmerTest)
library(ggplot2)
library(poolr)
library(ggrepel)
load_data <- function(file) {
logprob <- read_delim(file, locale=locale(encoding="UTF-8"),
col_names = c("target_word",
"concept",
"word_form",
"target_word_logprob",
"disj_logprob",
"line_num"))
logprob$line_num <- as.factor(logprob$line_num)
logprob$word_form <- as.factor(logprob$word_form)
return(logprob)
}
data <- load_data("prob_lineoldpair2tok.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_linenewpair2tok.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
# plotting the difference in surprisal
# t_test_data %>% mutate(above_zero = (-long + short)>0) %>%
#   ggplot(aes(x=reorder(concept, (-long + short), mean), y= -long + short, label = concept, color=above_zero)) +
#   geom_point(size=3) + geom_text(angle = -45, hjust = 1.5, size = 3) + theme_classic() + labs(y="Difference in surprisal", x = 'Concept') +
#   geom_hline(yintercept
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_lineoldpair10.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_lineoldpair50.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_lineoldpair100.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_linenewpair10.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_linenewpair50.csv")
data <- load_data("prob_linenewpair200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_linenewpair200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
data <- load_data("prob_lineoldpair200.csv")
data <- load_data("prob_lineoldpair200.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_linenewpair100.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
abbr_freq <- read_delim("firstapp_abbr_freq.csv", locale=locale(encoding="UTF-8"),
col_names = c("short_form",
"short_count",
"long_form",
"long_count",
"short_long_ratio"))
View(abbr_freq)
balanced_ratio10 <- abbr_freq %>%
filter(short_count > 10) %>%
filter(long_count > 10) %>%
filter(short_long_ratio > 0.1) %>%
filter(short_long_ratio < 10)
View(abbr_freq)
View(balanced_ratio10)
data <- load_data("prob_linenewpair50.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
mean(t_test_data$long)
mean(t_test_data$short)
disj <- data %>% select(-target_word, -target_word_logprob, -line_num) %>% mutate(surprisal = -disj_logprob) %>% mutate(is_short = ifelse(word_form == 'short', 0, 1))
disj$word_form <- as.factor(disj$word_form)
mixed_ml2 <- glmer(is_short ~ 1 + surprisal + (1 + surprisal|concept), data = disj, family = binomial)
summary(mixed_ml2)
subconcept <- data %>% select(-target_word, -target_word_logprob, -line_num)
sub_short <- subconcept %>% filter(word_form == 'short') %>% rename(short_disj = disj_logprob) %>% select(-word_form) %>% mutate(row = row_number())
sub_long <- subconcept %>% filter(word_form == 'long') %>% rename(long_disj = disj_logprob)%>% select(-word_form, -concept) %>% mutate(row = row_number())
combined <- full_join(sub_short, sub_long, by = "row")
t.test(combined$short_disj, combined$long_disj)
groups <- unique(data$concept)
ps <- data.frame(concept=unlist(groups))
pvalue <- c()
test_stats <- c()
for (i in 1:length(groups)) {
group <- groups[i]
subdata <- subset(data, concept == group)
p_value <- t.test(disj_logprob ~ word_form, data=subdata)$p.value
t <- t.test(disj_logprob ~ word_form, data=subdata)[[1]]
pvalue <- append(pvalue, p_value)
test_stats <- append(test_stats, t )
}
ps$p_value <- unlist(pvalue)
ps$test_stats <- unlist(test_stats)
ps %>% filter(p_value < 0.05)
ps %>% filter(p_value < 0.05 & test_stats < 0)
data <- load_data("prob_linevv2tok.csv")
data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>%
ungroup() %>% select(-target_word, -target_word_logprob) %>% spread(word_form, disj_logprob)
# means = data %>% group_by(target_word, concept, word_form) %>% summarize(disj_logprob=mean(disj_logprob), target_word_logprob=mean(target_word_logprob)) %>% ungroup()
# using this can directly change logprob to surprisal
means = data %>% group_by(target_word, concept, word_form) %>% summarize(concept_surprisal=-mean(disj_logprob), target_word_surprisal=-mean(target_word_logprob)) %>% ungroup()
t_test_data <- means %>% select(-target_word, -target_word_surprisal) %>% spread(word_form, concept_surprisal)
t.test(t_test_data$long, t_test_data$short, paired = TRUE)
